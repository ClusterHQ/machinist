language: python

python:
  - 2.7
  - pypy

env:
  # Test against the minimum supported version of eliot
  - |
    ELIOT='echo -n "eliot=="; python -c "from setup import _MINIMUM_ELIOT_VERSION; print _MINIMUM_ELIOT_VERSION"'

  # Test against the released version of eliot which pip will choose to
  # install.
  - |
    ELIOT='echo eliot'

  # Test against master@HEAD version of eliot.
  - |
    ELIOT='echo git+https://github.com/hybridcluster/eliot.git'

  # Test with a too-old version of eliot.
  - |
    ELIOT='echo eliot==0.3.0'

  # Test without any version of eliot.
  - |
    NO_ELIOT=''

  # Build the documentation.
  - |
    SPHINX_TARGET=html

  # Run the tests for the documentation.
  - |
    SPHINX_TARGET=doctest

matrix:
  exclude:
    - python: "pypy"
      env: "SPHINX_TARGET=html"
    - python: "pypy"
      env: "SPHINX_TARGET=doctest"

install:
  - |
    pip install coveralls coverage

  - |
    python setup.py --version

  # Install the selected eliot version.
  - |
    if [ -v ELIOT ]; then
        pip install "$(eval ${ELIOT})"
    fi

  - |
    pip install -e .[dev]

script:
  - |
    # Do a Sphinx thing if appropriate.
    if [ -v SPHINX_TARGET ]; then
        make --directory=doc "${SPHINX_TARGET}"
    else
        coverage run --branch --source machinist $(type -p trial) machinist
    fi
  - |
    # Don't bother generating a coverage report if we just did Sphinx stuff.
    if [ ! -v SPHINX_TARGET ]; then
        coverage report -m
    fi

after_success:
  - |
    # Don't bother reporting to coveralls if we just did Sphinx stuff.
    if [ ! -v SPHINX_TARGET ]; then
        coveralls
    fi

notifications:
  email: false
